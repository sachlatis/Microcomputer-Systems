START:
	IN 10H ; ’ρση της προστασίας μνήμης
	MVI A,0DH ; Αρχικοποίηση της διακοπής RST6.5
	SIM
	MVI B,00H ; Αρχικοποίηση σημαίας που μας δείχνει αν η
		   ; διακοπή προήλθε από πάτημα ή από άφημα του
		   ; πλήκτρου INTRPT.
		   ; Ε=0 -> πάτημα
	          ; Ε=1 -> άφημα
	          ; H ζητούμενη λειτουργία της άσκησης υλοποιείται
	          ; μετά το άφημα του πλήκτρου
	MVI C,10H ; Ορισμός κατωφλιού Κ1
	MVI D,80H ; Ορισμός κατωφλιού Κ2
	MVI E,F0H ; Ορισμός κατωφλίου Κ3
	INR C ; Αύξηση των κατωφλιών κατά ένα, ώστε να μπορούμε
	INR D ; να κάνουμε τις απαραίτητες εντολές διακλάδωσης
	INR E ; με μία μόνο εντολή JMP.
	LXI H,0900H ; Αρχικοποίηση του τμήματος μνήμης που θα
	MVI A,10H ; χρησιμοποιηθεί για την απεικόνιση των εξόδων
	MOV M,A ; των 7 segment displays με τιμές τις οποίες η
	INX H ; ρουτίνα DCD απεικονίζει σε σβηστά 7 segment
	MOV M,A ; displays (διευθύνσεις 0900H-0905H).
	INX H
	MOV M,A
	INX H
	MOV M,A
	INX H
	MOV M,A
	INX H
	MOV M,A
	EI ; Ενεργοποίηση των διακοπών

WAIT:	   ; Βρόχος αναμονής διακοπής
	DI ; Εντολές για συνεχή απεικονιση της εξόδου στα
	   ; 7 segment displays.

	LXI D,0900H
	PUSH PSW ; Αποθήκευση όλων των καταχωρητών
	PUSH B
	PUSH D
	PUSH H
	CALL STDM
	POP H
	POP D
	POP B
	POP PSW
	MVI D,80H ; Επαναφορά των περιεχομένων των καταχωρητών D και E
	MVI E,F0H
	INR D
	INR E
	CALL DCD
	EI ; Επανενεργοποίηση των διακοπών
	JMP WAIT

INTR_ROUTINE:  ; Ρουτίνα εξυπηρέτησης διακοπής
	MOV A,B ; Τμήμα ελέγχου της σημαίας. Αν είναι 0, τότε η
	CPI 01H ; διακοπή προέρχεται από πάτημα του διακόπτη,
	JZ MAIN_INTR ; οπότε την αγνοούμε και απλώς επιστρέφουμε.
	XRI 01H ; Αλλιώς, προχωράμε στο κύριο μέρος της
	MOV B,A ; ρουτίνας.
	EI
	RET

MAIN_INTR: 	   ; Κύριο μέρος της ρουτίνας
	CALL KIND ; Διάβασμα των δύο αριθμών που θα πατηθούν στο
	STA 0904H ; πληκτρολόγιο και αποθήκευσή τους στις θέσεις
	MOV D,A ; μνήμης 0904H και 0905H, που είναι αυτέ που θα
	CALL KIND ; απεικονιστούν στα δύο αριστεροτερα 7 segment
	STA 0905H ; displays.
	RRC ; Τα περιεχόμενα των καταχωρητών A και D μετά την
	RRC ; είσοδο βρίσκονται στη μορφή 0000ΧΧΧΧ (δυαδικός), με
	RRC ; τον Α να περιέχει τα 4 MSB και τον D τα 4 LSB
	RRC ; του 8-bit αριθμού που θέλουμε να πάρουμε ως
	    ; είσοδο. Έτσι, περιστρέφουμε τον Α 4 θέσεις και
	ORA D ; με μία OR, τους συγχωνεύουμε.
	MVI D,80H ; Επαναφέρουμε τα περιεχόμενα του καταχωρητή D
	INR D
	CMP E ; Αυτό το τμήμα του προγράμματος καθορίζει σε
	JC LESS_THAN_K3 ; ποια από τις 4 περιοχές βρίσκεται ο αριθμός
	MVI A,08H
	JMP END1 ; αποθηκευει στον A την τιμή που πρέπει να δοθεί
		  ; ως έξοδος στα leds.

LESS_THAN_K3:
	CMP D
	JC LESS_THAN_K2
	MVI A,04H
	JMP END1
	LESS_THAN_K2:
	CMP C
	JC LESS_THAN_K1
	MVI A,02H
	JMP END1
	LESS_THAN_K1:
	MVI A,01H

END1: 	; Έξοδος της κατάλληλης τιμής στα leds
	CMA
	STA 3000H
	MOV A,B ; Απεικόνιση του αριθμού, που είναι αποθηκευμένος
	LXI D,0900H ; στον A, στα 7 segment displays
	PUSH PSW
	PUSH B
	PUSH D
	PUSH H
	CALL STDM
	POP H
	POP D
	POP B
	POP PSW
	CALL DCD
	MVI D,80H ; Επαναφορά των περιεχομένων των καταχωρητών D και E
	MVI E,F0H
	INR D
	INR E
	XRI 01H ; Ενημέρωση της σημαίας και επαναφορά της στον B
	MOV B,A
	EI
	RET
END
